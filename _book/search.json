[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Summer Conference Case Study",
    "section": "",
    "text": "Welcome\nAs part of an ongoing staffing crisis, you have been asked by your director to reproduce a report that was produced under the last research director, who is now on a beach, enjoying her retirement, and unreachable. You asked your only analyst to try to reproduce the report, but they have not yet been able to, and there doesn’t seem to be any record of how the numbers were produced. The report establishes recidivism rates for several key programs and provides staffing levels for those programs. Your director wants to make the case that the DOC needs staff to implement successful programs. This is in response to a group of hostile legislators (a mix of far-right fiscal conservatives who do not believe in prison programs and far-left “de-funders” who think your budget is too big). They are running a bill to reduce your overall budget and eliminate some existing staff vacancies, with the argument that if you have survived for the past two years with your current staffing levels, you must be doing okay.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Welcome</span>"
    ]
  },
  {
    "objectID": "index.html#case-study-narrative",
    "href": "index.html#case-study-narrative",
    "title": "Summer Conference Case Study",
    "section": "Case Study Narrative",
    "text": "Case Study Narrative\n\nGDOC Recidivism Analysis\nAmid a staffing crisis at the Gotham Department of Corrections (GDOC), you find yourself in a peculiar predicament. Your director, the fearsome Evelyn “Firebrand” Summers, has thrust upon you the Herculean task of resurrecting a report forged under the previous research director, Miranda “Mermaid” Shelsky. Dr. Shelsky, now retired and sipping mojitos on a secluded beach in Fiji, left behind a report detailing recidivism rates and the indispensable staffing needs for GDOC’s prized programs.\nThe report establishes recidivism rates for several key supervision/reentry programs for high-risk people and provides staffing levels for these programs. Director Summers is depending on you to build a case to keep the necessary staff to implement these programs successfully.\nYou ask your analysts to try to produce another report with updated data, yet there mysteriously doesn’t seem to be any record of how the original report’s numbers were produced. Your best analyst has spent three days trying figure out the formula to no avail. The analyst is also now three days behind on other tasks that have been assigned and it is time to move on.\nMeanwhile, the ever-persistent Center Wing Coalition (CWC) is crafting a bill to counteract all the progress your agency has been making in your recidivism-reduction efforts. The CWC argues that if your agency has survived for the past two years with current staffing levels, you must be doing okay and are advocating to cut your overall allocated FTE. Meanwhile, your own staff is working overtime through lunch, and you are certain you saw at least two team members browsing on Indeed last week.\nYou’re in a bind, and time is ticking. Not to mention, your best friend has planned a getaway next month in Las Vegas. You paid for this trip over six months ago and you have no intention of missing it. However, you have no desire to be sitting in the Blue Man Group show thinking about this data…",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Welcome</span>"
    ]
  },
  {
    "objectID": "index.html#about-virtual-academy",
    "href": "index.html#about-virtual-academy",
    "title": "Summer Conference Case Study",
    "section": "About Virtual Academy",
    "text": "About Virtual Academy\nThe Advancing Data in Corrections initiative includes a Virtual Academy, which builds data literacy and analytic capabilities within departments of corrections nationwide to further data-informed planning and decision-making. Through their participation in the Virtual Academy, corrections agency staff can access the program’s self-paced learning materials, community forum, peer-to-peer networks, and technical assistance at no cost.\nFor more information about the program and the tools, services, and opportunities available, visit the Virtual Academy website.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Welcome</span>"
    ]
  },
  {
    "objectID": "va_cs.html",
    "href": "va_cs.html",
    "title": "GDOC Recidivism Analysis",
    "section": "",
    "text": "Introduction\nOur DOC captures 10 Evidence Based Recidivism Reduction (EBRR) programs in 2017 listed by the Federal Bureau of Prisons and the individuals involved:\nYour DOC Research Department tracks clients served and staff involved in running and supporting these programs.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>GDOC Recidivism Analysis</span>"
    ]
  },
  {
    "objectID": "va_cs.html#introduction",
    "href": "va_cs.html#introduction",
    "title": "GDOC Recidivism Analysis",
    "section": "",
    "text": "Anger Management\nThe Bureau Rehabilitation and Values Enhancement Program\nBasic Cognitive Skills\nThe Resolve Program\nResidential Drug Abuse Program\nDialectical Behavior Therapy\nSex Offender Treatment Program\nChallenge Program\nMental Health Step Down Program\nSteps Toward Awareness, Growth, and Emotional Strength Program",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>GDOC Recidivism Analysis</span>"
    ]
  },
  {
    "objectID": "va_cs.html#data-exploration",
    "href": "va_cs.html#data-exploration",
    "title": "GDOC Recidivism Analysis",
    "section": "Data Exploration",
    "text": "Data Exploration\nLet’s take a look at this EBRR program data. The name of our data is roster. Trying to gather anything from raw data row by row can be painful. We need to explore and synthesize what variables/columns we have, and get a quick summary of what they all look like. We know that GDOC has 10 programs. How can we find out more?\n\nQuick lookSummary\n\n\n\n\nReveal R code\ndatatable(roster, rownames=FALSE, options=list(pageLength=5, dom='ltip'))\n\n\n\n\n\n\n\n\n\n\nReveal R code\n#what's in our data\nprint(dfSummary(roster, varnumbers = FALSE, valid.col = FALSE), \n      method = \"render\", footnote = NA)\n\n#capture number of columns for printing in text\nnumcol &lt;- ncol(roster)\n\n\n\nData Frame Summary\nroster\nDimensions: 55 x 5\n  Duplicates: 5\n\n\n\n\n\n\n\n\n\n\n\n\nVariable\nStats / Values\nFreqs (% of Valid)\nGraph\nMissing\n\n\n\n\nclient_names [character]\n\n\n\n1. Beckham Gerhold\n\n\n2. Breana Ebert\n\n\n3. Dr. Tre Armstrong II\n\n\n4. Mr. Elihu Klocko\n\n\n5. Murl Kunde\n\n\n6. Alexys Nader\n\n\n7. Anita Becker\n\n\n8. Audrina Cassin MD\n\n\n9. Augustin Medhurst\n\n\n10. Cassius Glover\n\n\n[ 40 others ]\n\n\n\n\n\n\n2\n(\n3.6%\n)\n\n\n2\n(\n3.6%\n)\n\n\n2\n(\n3.6%\n)\n\n\n2\n(\n3.6%\n)\n\n\n2\n(\n3.6%\n)\n\n\n1\n(\n1.8%\n)\n\n\n1\n(\n1.8%\n)\n\n\n1\n(\n1.8%\n)\n\n\n1\n(\n1.8%\n)\n\n\n1\n(\n1.8%\n)\n\n\n40\n(\n72.7%\n)\n\n\n\n\n0 (0.0%)\n\n\nage [numeric]\n\n\n\nMean (sd) : 28.7 (4.8)\n\n\nmin ≤ med ≤ max:\n\n\n19 ≤ 29 ≤ 41\n\n\nIQR (CV) : 7 (0.2)\n\n\n\n18 distinct values\n\n0 (0.0%)\n\n\ndt [Date]\n\n\n\nmin : 1997-08-22\n\n\nmed : 2018-01-13\n\n\nmax : 2018-06-30\n\n\nrange : 20y 10m 8d\n\n\n\n47 distinct values\n\n0 (0.0%)\n\n\nprograms [character]\n\n\n\n1. stages\n\n\n2. am\n\n\n3. brave\n\n\n4. challenge\n\n\n5. mhsd\n\n\n6. sotrt\n\n\n7. bcs\n\n\n8. rdap\n\n\n9. resolve\n\n\n10. brv\n\n\n[ 4 others ]\n\n\n\n\n\n\n9\n(\n16.4%\n)\n\n\n8\n(\n14.5%\n)\n\n\n7\n(\n12.7%\n)\n\n\n6\n(\n10.9%\n)\n\n\n4\n(\n7.3%\n)\n\n\n4\n(\n7.3%\n)\n\n\n3\n(\n5.5%\n)\n\n\n3\n(\n5.5%\n)\n\n\n3\n(\n5.5%\n)\n\n\n2\n(\n3.6%\n)\n\n\n6\n(\n10.9%\n)\n\n\n\n\n0 (0.0%)\n\n\nret [numeric]\n\n\n\nMean (sd) : 0.5 (1.5)\n\n\nmin ≤ med ≤ max:\n\n\n-1 ≤ 0 ≤ 11\n\n\nIQR (CV) : 1 (2.8)\n\n\n\n\n\n\n-1\n:\n1\n(\n1.8%\n)\n\n\n0\n:\n34\n(\n61.8%\n)\n\n\n1\n:\n18\n(\n32.7%\n)\n\n\n2\n:\n1\n(\n1.8%\n)\n\n\n11\n:\n1\n(\n1.8%\n)\n\n\n\n\n0 (0.0%)\n\n\n\n\n\n\n\n\n\n\nFrom what the summary above shows us, it appears we have 5 variables in the roster dataset. What further exploring, cleaning, and manipulation is required for us to successfully produce results for Director Summers?",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>GDOC Recidivism Analysis</span>"
    ]
  },
  {
    "objectID": "va_cs.html#cleaning",
    "href": "va_cs.html#cleaning",
    "title": "GDOC Recidivism Analysis",
    "section": "Cleaning",
    "text": "Cleaning\n\nDuplicates\nWhat other pieces of information might be relevant to what we need to know about the data? Since it appears to be person-level data from our data exploration summary, let’s check to make sure that there aren’t any duplicate observations.\n\n\nReveal R code\n#are there any duplicates?\nroster[duplicated(roster) | duplicated(roster, fromLast=TRUE),]\n\n#how many duplicates?\ndupct &lt;- length(unique(\n  roster[duplicated(roster) | duplicated(roster, fromLast=TRUE),]\n  ))\n\n\n\n  \n\n\n\nIt’s a really good thing we checked! From the table above it appears we have 5 duplicate observations/rows in our data. Let’s remove them and keep exploring!\n\n\nReveal R code\n#deduplicate across all columns\nroster.nodup &lt;- roster[!duplicated(roster), ]\n\n#check for dups again\nroster.nodup[duplicated(roster.nodup) | duplicated(roster.nodup, fromLast=TRUE),]\n\n\n\n  \n\n\n\nAlright! No more duplicates! What else could require cleaning that we haven’t thought of?\n\n\nRecoding\nWe need to take a closer look at our other variables that may help us report out what the GDOC director needs. Let’s start with our programs variable.\n\n\nReveal R code\n#count total number of programs\ndefine_keywords(title.freq = \"PROGRAMS values\")\nprint(freq(roster.nodup$programs, report.nas = FALSE, cumul = FALSE, display.type = FALSE), \n      method = \"render\", footnote = NA, Variable = \"\")\n\n#count number of programs\nprgnum &lt;- n_distinct(roster.nodup$programs)\n\n\n\nPROGRAMS values\n\n\n\n\n\n\nFreq\n%\n\n\n\n\nam\n7\n14.00\n\n\nbcs\n3\n6.00\n\n\nbgs\n1\n2.00\n\n\nbrave\n6\n12.00\n\n\nbrv\n2\n4.00\n\n\nchallenge\n6\n12.00\n\n\ndbt\n2\n4.00\n\n\nfbt\n1\n2.00\n\n\nmhsd\n3\n6.00\n\n\nrdap\n3\n6.00\n\n\nrdp\n1\n2.00\n\n\nresolve\n3\n6.00\n\n\nsotrt\n3\n6.00\n\n\nstages\n9\n18.00\n\n\nTotal\n50\n100.00\n\n\n\n\n\n\n\nHm - it looks like there are more than 10 programs; 14 programs to be exact. That doesn’t match what you know about your GDOC EBRR programs! Could there be something wrong with the data? If there are issues with your programs variable, then there could be more issues we haven’t discovered.\n\n\nReveal R code\n#check out weird date values\nyeardt &lt;- as.factor(year(roster.nodup$dt))\ndefine_keywords(title.freq = \"DT values\")\nprint(freq(yeardt, report.nas = FALSE, cumul = FALSE, display.type = FALSE), \n      method = \"render\", footnote = NA, Variable = \"\")\n\n#check out weird return values\ndefine_keywords(title.freq = \"RET values\")\nprint(freq(roster.nodup$ret, report.nas = FALSE, cumul = FALSE, display.type = FALSE), \n      method = \"render\", footnote = NA, Variable = \"\")\n\n\n\nDT values\n\n\n\n\n\n\nFreq\n%\n\n\n\n\n1997\n1\n2.00\n\n\n2007\n1\n2.00\n\n\n2017\n23\n46.00\n\n\n2018\n25\n50.00\n\n\nTotal\n50\n100.00\n\n\n\n\n\n\nRET values\n\n\n\n\n\n\nFreq\n%\n\n\n\n\n-1\n1\n2.00\n\n\n0\n31\n62.00\n\n\n1\n16\n32.00\n\n\n2\n1\n2.00\n\n\n11\n1\n2.00\n\n\nTotal\n50\n100.00\n\n\n\n\n\n\n\nIt looks like there are some errors in your data across programs, ret, and dt! We’ll probably have to make some assumptions on our data. For example, ret must be our variable that indicates whether an individual enrolled in an EBRR program returned to prison within 365 days of their release. While the majority of the values are 0s and 1s, a select few are greater than 1 or less than 0. Clean them up so you can accurately report all EBRR programs and their associated recidivism rates.\n\n\nReveal R code\n#clean program names\nroster.clean &lt;- roster.nodup |&gt;\n  #fix programs, dates, and returns\n  mutate(programs_clean = case_when(programs == \"bgs\" ~ \"bcs\",\n                                    programs == \"fbt\" ~ \"dbt\",\n                                    programs == \"brv\" ~ \"brave\",\n                                    programs == \"rdp\" ~ \"rdap\",\n                                    TRUE ~ programs),\n         \n         #dates - assume that wrong dates occurred in 2017\n         dt      = case_when(year(dt) &lt; 2017 ~ `year&lt;-`(dt, 2017),\n                                    TRUE ~ dt),\n         \n         #returns - assume that wrong returns should all be =1\n         ret            = case_when(ret == -1 ~ 1,\n                                    ret == 2  ~ 1,\n                                    ret == 11 ~ 1,\n                                    TRUE ~ ret)\n         )\n\n#check cleaned program names\nroster.clean |&gt;\n  count(programs_clean,programs)\n\n#check date values\nroster.clean |&gt;\n  count(year(dt))\n\n#check out weird return values\nroster.clean |&gt;\n  count(ret)\n\n\n\n  \n\n  \n\n  \n\n\n\nMuch better! 10 programs as expected for our DOC, and cleaned dates and returns! Now let’s see what’s going on with this returns variable when cross-tabbed with our 10 programs.\n\n\nReveal R code\n#recidivism by program count\nroster.clean |&gt;\n  count(programs_clean,ret)\n\n\n\n  \n\n\n\nLet’s calculate recidivism rates for all of our programs! It looks like we have data across two years from the dt column, from 2017-04-14 to 2018-06-30, so perhaps we should calculate recidivism rates overall and by year!\n\n\nReveal R code\n##create dataset of numerators and denominators\n#recidivism rates overall\nroster2.1 &lt;- roster.clean |&gt;\n  mutate(year = factor(year(dt))) |&gt;\n  select(-c(client_names,age,programs)) |&gt;\n  group_by(programs_clean) |&gt;\n  count(ret) |&gt;\n  mutate(clients_served = sum(n),\n         recid_rate_all = case_when(ret == 1 ~ round(n/clients_served,2),\n                                ret == 0 ~ 0)\n         ) |&gt;\n  group_by(programs_clean) |&gt;\n  slice(n()) |&gt;\n  select(-c(ret, n)) |&gt;\n  rename(clients_served_all = clients_served)\n#print out recidivism rates overall years\nroster2.1 |&gt;\n  select(programs_clean,recid_rate_all) |&gt;\n  kable(format=\"html\")\n\n#recidivism rates by year\nroster2.2 &lt;- roster.clean |&gt;\n  mutate(year = factor(year(dt))) |&gt;\n  select(-c(client_names,age,programs)) |&gt;\n  group_by(programs_clean,year) |&gt;\n  count(ret,year) |&gt;\n  mutate(clients_served = sum(n),\n         recid_rate_year= case_when(ret == 1 ~ round(n/clients_served,2),\n                                ret == 0 ~ 0)\n         ) |&gt;\n  group_by(programs_clean,year) |&gt;\n  slice(n()) |&gt;\n  select(-c(ret, n)) |&gt;\n  rename(clients_served_year = clients_served)\n#print out recidivism rates by year\nroster2.2 |&gt;\n  arrange(year,programs_clean) |&gt;\n  select(year,programs_clean,recid_rate_year) |&gt;\n  kable(format=\"html\")\n\n#combine data by programs to capture recidivism rates overall and by year\nroster2 &lt;- inner_join(roster2.1, roster2.2, by = \"programs_clean\")\n#verify that join did not lose any observations\nanti_join(roster2.1, roster2.2, by = \"programs_clean\")\n\n\n\n\n\nprograms_clean\nrecid_rate_all\n\n\n\n\nam\n0.29\n\n\nbcs\n0.25\n\n\nbrave\n0.25\n\n\nchallenge\n0.33\n\n\ndbt\n0.67\n\n\nmhsd\n0.33\n\n\nrdap\n0.75\n\n\nresolve\n0.33\n\n\nsotrt\n0.67\n\n\nstages\n0.33\n\n\n\n\n\n\n\n\n\nyear\nprograms_clean\nrecid_rate_year\n\n\n\n\n2017\nam\n0.33\n\n\n2017\nbcs\n0.00\n\n\n2017\nbrave\n0.33\n\n\n2017\nchallenge\n0.33\n\n\n2017\ndbt\n1.00\n\n\n2017\nmhsd\n0.00\n\n\n2017\nrdap\n1.00\n\n\n2017\nresolve\n0.33\n\n\n2017\nsotrt\n1.00\n\n\n2017\nstages\n0.20\n\n\n2018\nam\n0.25\n\n\n2018\nbcs\n0.50\n\n\n2018\nbrave\n0.20\n\n\n2018\nchallenge\n0.33\n\n\n2018\ndbt\n0.00\n\n\n2018\nmhsd\n0.50\n\n\n2018\nrdap\n0.50\n\n\n2018\nsotrt\n0.50\n\n\n2018\nstages\n0.50\n\n\n\n\n\n\n  \n\n\n\nLet’s take a look at our program staffing! Our DOC captures 10 Evidence Based Recidivism Reduction (EBRR) programs listed by the Federal Bureau of Prisons and the individuals involved.The name of our data is staff.\n\n\nReveal R code\n#what's in our data\nsummary(staff)\n\nnumcolst &lt;- ncol(staff)\nprint(numcolst)\n\n\n    staff               prg           \n Length:80          Length:80         \n Class :character   Class :character  \n Mode  :character   Mode  :character  \n[1] 2\n\n\nIt appears we only have 2 variables in the program staffing data. Let’s keep exploring!\n\n\nReveal R code\n#take a peek\nhead(staff)\n\n\n\n  \n\n\n\nWell, well, well - person-level data again! Why don’t we check for duplicates just in case?\n\n\nReveal R code\n#are there any duplicates?\nstaff[duplicated(staff) | duplicated(staff, fromLast=TRUE),]\n\n\n\n  \n\n\n\nPhew! No duplicates. That was a close one. Now let’s take a closer look at our 10 programs covered by these staff.\n\n\nReveal R code\n#count total number of programs\nprgnum.stf &lt;- n_distinct(staff$prg)\nprint(prgnum.stf)\n\n\n[1] 13\n\n\nWell - it looks like yet again we have data with more than 10 programs; 13 to be exact. Let’s see what’s going on here.\n\n\nReveal R code\n#list out the actual program names\nstaff |&gt;\n  count(prg)\n\n\n\n  \n\n\n\nIt looks like there are some errors in your data (again!?)! Clean them up so you can accurately report all EBRR programs and their associated program staff.\n\n\nReveal R code\n#clean program names\nstaff.clean &lt;- staff |&gt;\n  mutate(programs_clean = case_when(prg == \"resol\" ~ \"resolve\",\n                                    prg == \"brv\" ~ \"brave\",\n                                    prg == \"stg\" ~ \"stages\",\n                                    TRUE ~ prg))\n\n#check cleaned program names\nstaff.clean |&gt;\n  count(programs_clean,prg)\n\n\n\n  \n\n\n\nMuch better! Now let’s see how many staff we have by program!\n\n\nReveal R code\n#create dataset of staff counts\nstaff2 &lt;- staff.clean |&gt;\n  select(-c(staff,prg)) |&gt;\n  count(programs_clean) |&gt;\n  rename(num_staff = n)\n\n#print staffing\nprint(staff2)\n\n#histogram of staffing\nhist(staff2$num_staff)\n\n\n\n\n\n\n\n\n\n   programs_clean num_staff\n1              am         2\n2             bcs         4\n3           brave         8\n4       challenge         4\n5             dbt        15\n6            mhsd         6\n7            rdap         5\n8         resolve         8\n9           sotrt        11\n10         stages        17",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>GDOC Recidivism Analysis</span>"
    ]
  },
  {
    "objectID": "va_cs.html#reporting-results",
    "href": "va_cs.html#reporting-results",
    "title": "GDOC Recidivism Analysis",
    "section": "Reporting Results",
    "text": "Reporting Results\n\nData Visualizations\nWe have to get out those results now! Let’s combine the program staff and recidivism rates data so we can print out a table for our Director. Create some tables and put them into a format the Director will appreciate.\n\nTables: OverallTables: By Year\n\n\n\n\nReveal R code\n#create table dataset\ntabout &lt;- inner_join(roster2, staff2, by = (\"programs_clean\")) |&gt;\n  select(-c(clients_served_all, clients_served_year)) |&gt;\n  ungroup() |&gt;\n  #if any years are missing, fill in\n  complete(year, nesting(programs_clean,num_staff),\n           fill = list(recid_rate_all = NA, recid_rate_year = NA)\n  ) |&gt;\n  #correct missing values for recid_rate_all since this is the overall recidivism rate across multiple years\n  group_by(programs_clean) |&gt;\n  fill(recid_rate_all, .direction = \"updown\") |&gt;\n  ungroup() |&gt;\n  #create final program names for table\n  mutate(program_official = case_when(programs_clean == \"am\"        ~ \"Anger Management\",\n                                      programs_clean == \"bcs\"       ~ \"Basic Cognitive Skills\",\n                                      programs_clean == \"brave\"     ~ \"The Bureau Rehabilitation and Values Enhancement Program\",\n                                      programs_clean == \"challenge\" ~ \"Challenge Program\",\n                                      programs_clean == \"dbt\"       ~ \"Dialectical Behavior Therapy\",\n                                      programs_clean == \"mhsd\"      ~ \"Mental Health Step Down Program\",\n                                      programs_clean == \"rdap\"      ~ \"Residential Drug Abuse Program\",\n                                      programs_clean == \"resolve\"   ~ \"The Resolve Program\",\n                                      programs_clean == \"sotrt\"     ~ \"Sex Offender Treatment Program\",\n                                      programs_clean == \"stages\"    ~ \"Steps Toward Awareness, Growth, and Emotional Strength Program\",\n                                      TRUE ~ programs_clean))\n\n#for positioning in plotting\nlast &lt;- tail(tabout$programs_clean,n=1)\n\n\n#verify join was successful\njoincheck &lt;- anti_join(roster2, staff2, by = (\"programs_clean\"))\n\n#print out overall rates and staff\nreportit &lt;- tabout |&gt; \n  filter(year==date1) |&gt;\n  select(c(program_official, recid_rate_all, num_staff))\n\nreportit |&gt; \n  datatable(extensions = 'Buttons', rownames=FALSE, colnames=c('Program', 'Recidivism Rate', 'Staffing'), \n                          options=list(pageLength=10, dom='Bt',\n  buttons = list(\n          list(extend = \"csv\", text = \"Download Data\", filename = \"data\",\n               exportOptions = list(\n                 modifier = list(page = \"all\")))\n)\n)\n)\n\n\n\n\n\n\n\n\n\n\nReveal R code\n#CROSSTALK by year rates and staff\ntabout2 &lt;- SharedData$new(tabout |&gt; \n  select(c(year, program_official, recid_rate_year, num_staff)))\n\nfilter_checkbox(\"year\", \"Select Year\", tabout2, ~year, inline=FALSE)\ndatatable(tabout2, extensions = 'Buttons', rownames=FALSE, colnames=c('Year', 'Program', 'Recidivism Rate', 'Staffing'), \n                          options=list(pageLength=10, dom='Btip',\n buttons = list(\n          list(extend = \"csv\", text = \"Download Table View\", filename = \"view_year\",\n               exportOptions = list(\n                 modifier = list(page = \"current\")\n               )\n          ),\n          list(extend = \"csv\", text = \"Download Data\", filename = \"data\",\n               exportOptions = list(\n                 modifier = list(page = \"all\")))\n)\n)\n)\n\n\n\nSelect Year\n\n\n\n\n2017\n\n\n\n\n\n2018\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nSave this for the final report!\n\n\nThese tables are fantastic! But I recall that our Director is a bit of a “visual” person. Can we turn these into some pretty charts?\n\nPlots: OverallPlots: By Year\n\n\n\n\nReveal R code\n#basic bar chart of overall recidivism rate by program\nggplot(tabout |&gt;\n         filter(year == date1)\n       ,aes(x=programs_clean, y=recid_rate_all)) +\n  geom_bar(stat=\"identity\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nReveal R code\n#basic bar chart of recidivism rate by year by program\nggplot(tabout,aes(x=programs_clean, y=recid_rate_year,fill=year)) +\n         geom_bar(position=\"dodge\", stat=\"identity\")\n\n\n\n\n\n\n\n\n\n\n\n\nOh I think we could do better than that!\n\n\nReveal R code\n#build bar chart of recidivism rates across programs\n#information to plot, pick dates\ndates &lt;- as.numeric(c(date1,date2)) #what years of data do you want to plot?\n\n#custom title header of plot\ntitledates &lt;- ifelse(length(dates)&gt;=2 & date1 != date2, paste0(date1,\" - \",date2),\n                     ifelse((dates==date1 | dates==date2) & ALL.BY, as.character(dates),\n                            ifelse(!ALL.BY, date1, \"\")))\n\n#which years/programs are missing data?\nprg.NA &lt;- tabout |&gt; \n  filter(is.na(recid_rate_year)) |&gt;\n  pull(programs_clean)\n\n#plot it! this will plot recidivism rates with overlaid staffing text\nrr &lt;- ggplot(tabout |&gt; \n               filter(if(ALL.BY) year %in% dates else year == date2) |&gt;\n               mutate(recid_rate = case_when(ALL.BY  ~ recid_rate_year,\n                                             !ALL.BY ~ recid_rate_all))\n             ,aes(x=programs_clean, y=recid_rate, fill=year)) +\n  geom_bar(position = \"dodge\",stat = \"identity\", na.rm=TRUE) +\n  geom_text(aes(label=ifelse(year==dates[2],paste(num_staff,\"staff\"),\"\")), vjust=-0.3, color = staffc, na.rm=TRUE) +\n  scale_fill_manual(values=c(date1c,date2c)) +\n  ylim(0,1) +\n  ylab(\"Recidivism Rate\") +\n  xlab(\"EBBR Programs\") +\n  ggtitle(paste0(\"Recidivism Rates across EBBR programs\\n\",titledates)) +\n  theme_classic() +\n  #remove legend if plotting overall (not by year)\n  {if(!ALL.BY) theme(legend.position=\"none\")}+\n  #only print caption if a program is missing data\n  {if(length(prg.NA)!=0) labs(caption = capture.output(cat(\"The following programs were missing data in some years:\", unique(toupper(prg.NA)), sep=\" \")))}+\n  theme(plot.caption=element_text(hjust=0))\n\n#display\nrr\n\n\n\n\n\n\n\n\n\n\n\n Download Plot\n\n\n\n\n\n\n\n\nImportant\n\n\n\nSave this for the final report!\n\n\n\n\nCWC Damned Lies and Statistics\nThis was amazing work; our Director is so happy! But wait! Oh no!! The Center Wing Coalition advocacy group just published a report that EBBR programs’ recidivism rates are at an all time high of 47.4% with a report that claims to have used your DOC’s reported data on EBBR program recidivism rates! Find out what’s going on, and fast!\n\n\nReveal R code\n#manage the data to produce recidivism rates\ntabout2 &lt;- inner_join(roster2, staff2, by = (\"programs_clean\")) |&gt;\n  ungroup() |&gt;\n  #if any years are missing, fill in\n  complete(year, nesting(programs_clean,num_staff),\n           fill = list(recid_rate_all = NA, recid_rate_year = NA)\n  ) |&gt;\n  #correct missing values for recid_rate_all since this is the overall recidivism rate across multiple years\n  group_by(programs_clean) |&gt;\n  fill(c(recid_rate_all,clients_served_all), .direction = \"updown\")\n\n#calculate average recidivism rate across programs from all years\nunw.a &lt;- round(mean(tabout2$recid_rate_all,na.rm=TRUE),2)\n\n#calculate average recidivism rate across programs from year 1\nunw.d1 &lt;- round(mean(tabout2[which(tabout2$year==date1),]$recid_rate_year,na.rm=TRUE),2)\n\n#calculate average recidivism rate across programs from year 2\nunw.d2 &lt;- round(mean(tabout2[which(tabout2$year==date2),]$recid_rate_year,na.rm=TRUE),2)\n\n\n#verify join was successful\ndoublecheck &lt;- anti_join(roster2, staff2, by = (\"programs_clean\"))\n\n#print values\nprint(paste0(unw.a*100,\"%\", \" average recidivism rate overall\"))\nprint(paste0(unw.d1*100,\"%\", \" average recidivism rate in \",date1))\nprint(paste0(unw.d2*100,\"%\", \" average recidivism rate in \",date2))\n\n\n[1] \"42% average recidivism rate overall\"\n[1] \"45% average recidivism rate in 2017\"\n[1] \"36% average recidivism rate in 2018\"\n\n\nHm - something still doesn’t line up. We need to keep investigating and find out why our numbers aren’t matching up!\n\n\nReveal R code\n#programs to remove per the CWC report\nrm.pgms &lt;- c(\"bcs\", \"brave\", \"sotrt\", \"mhsd\", \"resolve\")\n\n\n\n\nReveal R code\n#remove 5 of the 10 programs because the advocacy group was sneaky\nadv &lt;- tabout |&gt;\n  filter(!(programs_clean %in% rm.pgms) &\n             year == date1) #dates repeat the same information, so just pick one date to average over\n#calculate ADVOCACY rate, which will be inserted into document text\nadv_rate &lt;- round(mean(adv$recid_rate_all,na.rm=TRUE)*100,1)\ncat(capture.output(cat(paste0(adv_rate,\"%\"), \"average recidivism rate overall for the following programs:\", unique(tabout[which(!tabout$programs_clean %in% rm.pgms),]$programs_clean), sep=\" \")))\n\n\n47.4% average recidivism rate overall for the following programs: am challenge dbt rdap stages\n\n\n\n\nData-Informed Reporting\nAlright - there’s the number the advocacy group reported. But what’s missing? Our Director is not going to be satisfied with just replicating the Center Wing Coalition results! What if we considered calculating a weighted recidivism rate?\n\n\nReveal R code\n#manage the data to produce recidivism rates\n#total clients served (all years, year1, year2)\ntotal.a &lt;- sum(tabout2[which(tabout2$year==date1),]$clients_served_all, na.rm=TRUE)\ntabout2.wgt &lt;- tabout2 |&gt;\n  filter(year==date1) |&gt;\n  mutate(recid_rate_all_w = clients_served_all*recid_rate_all)\nw.a &lt;- round(sum(tabout2.wgt$recid_rate_all_w)/total.a,2)\n\n#total clients served (all years), JUST 5 PROGRAMS!!!\ntotal.a5 &lt;- sum(tabout2[which(tabout2$year==date1 & !tabout2$programs_clean %in% rm.pgms),]$clients_served_all, na.rm=TRUE)\ntabout2.wgt5 &lt;- tabout2 |&gt;\n  filter(!(programs_clean %in% rm.pgms) & year==date1) |&gt;\n  mutate(recid_rate_all_w = clients_served_all*recid_rate_all)\nw.a5 &lt;- round(sum(tabout2.wgt5$recid_rate_all_w)/total.a5,2)\n\n#total clients served (year 1)\ntotal.d1 &lt;- sum(tabout2[which(tabout2$year==date1),]$clients_served_year,na.rm=TRUE)\ntabout2.wgt &lt;- tabout2 |&gt;\n  filter(year==date1) |&gt;\n  mutate(recid_rate_year_w = clients_served_year*recid_rate_year)\nw.d1 &lt;- round(sum(tabout2.wgt$recid_rate_year_w,na.rm=TRUE)/total.d1,2)\n\n#total clients served (year2)\ntotal.d2 &lt;- sum(tabout2[which(tabout2$year==date2),]$clients_served_year,na.rm=TRUE)\ntabout2.wgt &lt;- tabout2 |&gt;\n  filter(year==date2) |&gt;\n  mutate(recid_rate_year_w = clients_served_year*recid_rate_year)\nw.d2 &lt;- round(sum(tabout2.wgt$recid_rate_year_w,na.rm=TRUE)/total.d2,2)\n\n\n#print values\nprint(paste0(w.a*100,\"%\", \" average recidivism rate (weighted) in overall\"))\nprint(capture.output(cat(paste0(w.a5*100,\"%\"), \"average recidivism rate (weighted) overall for the following programs:\", unique(tabout[which(!tabout$programs_clean %in% rm.pgms),]$programs_clean), sep=\" \")))\n\n\n[1] \"38% average recidivism rate (weighted) in overall\"\n[1] \"41% average recidivism rate (weighted) overall for the following programs: am challenge dbt rdap stages\"\n\n\nAlright! If we just weight our data then we see that the average overall recidivism rate across the five programs that the advocacy group highlighted is only 41%. Great work!\nNow let’s report it through some fancy data visualization work.\n\n\n\n\n\n\nNote\n\n\n\nChange the highlighted code below (ALL.BY, CWC, and plot colors) to update your output.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nDownload your plot!\n\n\n\nA Download Image button will appear when you hover over the plot.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>GDOC Recidivism Analysis</span>"
    ]
  },
  {
    "objectID": "va_cs.html#more-cool-data-viz",
    "href": "va_cs.html#more-cool-data-viz",
    "title": "GDOC Recidivism Analysis",
    "section": "More Cool Data Viz!",
    "text": "More Cool Data Viz!\nLet’s prepare our data to do some really fun data viz! What are some other engaging ways we could plot recidivism rates for leadership and our stakeholders pooled overall for these programs?\n\nPlotting Overall\n\nDotsLollipopsMore Lollipops!\n\n\n\n\nReveal R code\n#this code will run if plotting data for multiple years, otherwise nothing will be produced (i.e., ALL.BY &lt;- T)\n\n#manipulate data for plotting\ntabout.date1 &lt;- tabout |&gt;\n  filter(year==date1) |&gt;\n  select(c(recid_rate_year, programs_clean, recid_rate_all)) |&gt;\n  rename(recid_rate_date1 = recid_rate_year)\ntabout.date2 &lt;- tabout |&gt;\n  filter(year==date2) |&gt;\n  select(c(recid_rate_year, programs_clean)) |&gt;\n  rename(recid_rate_date2 = recid_rate_year)\ntabout.dates &lt;- inner_join(tabout.date1, tabout.date2, by = \"programs_clean\") |&gt;\n  select(programs_clean, recid_rate_date1, recid_rate_date2, recid_rate_all)\n\n#make some really cool horizontal floating dot charts!\n#overwrite value of rates to overall if ALL.BY\n{if(!ALL.BY) tabout.dates$recid_rate_date1 &lt;- tabout.dates$recid_rate_all}\n\n#plot two years or one year depending on ALL.BY setting\n{if(ALL.BY) plotit &lt;- c(tabout.dates[which(tabout.dates$programs_clean==\"stages\"),]$recid_rate_date1, tabout.dates[which(tabout.dates$programs_clean==\"stages\"),]$recid_rate_date2) else plotit &lt;- tabout.dates[which(tabout.dates$programs_clean==\"stages\"),]$recid_rate_date1}\n\n#remove label legend if by year\n{if(ALL.BY) titledates2 &lt;- c(as.factor(date1),as.factor(date2)) else titledates2 &lt;- \"\"}\n\n#plot!\ngg_dot &lt;- tabout.dates |&gt;\n  # rearrange the factor levels for programs by rates for date1\n  arrange(recid_rate_date1) |&gt;\n  mutate(discipline = fct_inorder(programs_clean)) |&gt;\n  \n  ggplot() +\n  # remove axes and superfluous grids\n  theme_classic() +\n  theme(axis.title = element_blank(),\n        axis.ticks.y = element_blank(),\n        axis.line = element_blank()) +\n  \n  # add a dummy point for scaling purposes\n  geom_point(aes(x = 0.7, y = programs_clean), \n             size = 0, col = \"white\") + \n  \n  # add the horizontal programs_clean lines\n  geom_hline(yintercept = 1:length(tabout.dates$programs_clean), col = \"grey80\") +\n  \n  # add a point for each date1 recidivism rate\n  geom_point(aes(x = recid_rate_date1, y = programs_clean), \n             size = 11, col = date1c) +\n\n  # add a point for each date2 recidivism rate\n {if(ALL.BY) geom_point(aes(x = recid_rate_date2, y = programs_clean),size = 11, col = date2c)} + \n\n  # round each date2 recidivism rate\n  {if(ALL.BY) geom_text(aes(x = recid_rate_date2, y = programs_clean, label = paste0(round(recid_rate_date2, 2))), col = \"black\")} +\n\n  # round each date1 recidivism rate\n  geom_text(aes(x = recid_rate_date1, y = programs_clean, \n                label = paste0(round(recid_rate_date1, 2))),\n            col = \"white\") +\n\n  # add a label above the first two points\n  geom_text_repel(aes(x = x, y = y, label = label, col = label), force_pull = 50,\n            data.frame(x     = plotit, \n                       y     = length(tabout.dates$programs_clean) + 2, \n                       label = titledates2), size = 6) +\n  scale_color_manual(values = c(date1c, date2c), guide = \"none\") +\n  \n  # manually specify the x-axis\n  scale_x_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1), \n                     labels = c(\"0\",\"0.25\", \"0.50\", \"0.75\", \"1\")) +\n  # manually set the spacing above and below the plot\n  scale_y_discrete(expand = c(0.2, 0)) \n\n#add titles/captions\ngg_dot + \n  {if (ALL.BY) ggtitle(\"Recidivism Rates across EBBR programs\\n\") else ggtitle(paste0(\"Recidivism Rates across EBBR programs\\n\",titledates))} +\n  #only print caption if a program is missing data\n  {if(length(prg.NA)!=0) labs(caption = capture.output(cat(\"The following programs were missing data in some years:\", unique(toupper(prg.NA)), sep=\" \")))}+\n  theme(plot.caption=element_text(hjust=0))\n\n\n\n\n\n\n\n\n\n\n\n\n\nReveal R code\n##horizontal lollipop chart\nggplot(tabout, aes(x=programs_clean, y=recid_rate_all)) +\n  geom_segment( aes(x=programs_clean, xend=programs_clean, y=0, yend=recid_rate_all), color=date1c) +\n  geom_point( color=staffc, size=4, alpha=0.6) +\n  theme_light() +\n  coord_flip() +\n  xlab(\"EBBR Programs\") +\n  ylab(\"Recidivism Rate\") +\n  theme(\n    panel.grid.major.y = element_blank(),\n    panel.border = element_blank(),\n    axis.ticks.y = element_blank()\n  ) + \n  ggtitle(paste0(\"Recidivism Rates across EBBR programs\\n\",titledates)) +\n  theme(plot.caption=element_text(hjust=0)) +\n  #only print caption if a program is missing data\n  {if(length(prg.NA)!=0) labs(caption = capture.output(cat(\"The following programs were missing data in some years:\", unique(toupper(prg.NA)), sep=\" \")))}\n\n\n\n\n\n\n\n\n\n\n\n\n\nReveal R code\n##horizontal lollipop chart w/weighted average\nggplot(tabout, aes(x=programs_clean, y=recid_rate_all)) +\n  geom_segment(aes(x=programs_clean, xend=programs_clean, y=w.a, yend=recid_rate_all), color=date1c) +\n  geom_point(color=staffc, size=4, alpha=0.6) +\n  geom_hline(yintercept=w.a, linetype = \"dashed\", color = hlinew1, size = 1) +\n  geom_label(aes(label=paste0(\"Weighted avg: \",w.a), x=w.a, vjust = -9, hjust = 0.75), fill=hlinew1,\n                  data = tabout |&gt;\n               filter(programs_clean == last & year == date2)) +\n  theme_light() +\n  coord_flip() +\n  xlab(\"EBBR Programs\") +\n  ylab(\"Recidivism Rate\") +\n  theme(\n    panel.grid.major.y = element_blank(),\n    panel.border = element_blank(),\n    axis.ticks.y = element_blank()\n  ) + \n  ggtitle(paste0(\"Recidivism Rates across EBBR programs\\n\",titledates)) +\n  #only print caption if a program is missing data\n  {if(length(prg.NA)!=0) labs(caption = capture.output(cat(\"The following programs were missing data in some years:\", unique(toupper(prg.NA)), sep=\" \")))}+\n  theme(plot.caption=element_text(hjust=0))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlotting by Year\nWhat about displaying these rates by year?\n\nDotsLines\n\n\n\n\nReveal R code\n#this code will run if plotting data for multiple years, otherwise nothing will be produced (i.e., ALL.BY &lt;- T)\n\n#manipulate data for plotting\ntabout.date1 &lt;- tabout |&gt;\n  filter(year==date1) |&gt;\n  select(c(recid_rate_year, programs_clean, recid_rate_all)) |&gt;\n  rename(recid_rate_date1 = recid_rate_year)\ntabout.date2 &lt;- tabout |&gt;\n  filter(year==date2) |&gt;\n  select(c(recid_rate_year, programs_clean)) |&gt;\n  rename(recid_rate_date2 = recid_rate_year)\ntabout.dates &lt;- inner_join(tabout.date1, tabout.date2, by = \"programs_clean\") |&gt;\n  select(programs_clean, recid_rate_date1, recid_rate_date2, recid_rate_all)\n\n#make some really cool horizontal floating dot charts!\n#overwrite value of rates to overall if ALL.BY\n{if(!ALL.BY) tabout.dates$recid_rate_date1 &lt;- tabout.dates$recid_rate_all}\n\n#plot two years or one year depending on ALL.BY setting\n{if(ALL.BY) plotit &lt;- c(tabout.dates[which(tabout.dates$programs_clean==\"stages\"),]$recid_rate_date1, tabout.dates[which(tabout.dates$programs_clean==\"stages\"),]$recid_rate_date2) else plotit &lt;- tabout.dates[which(tabout.dates$programs_clean==\"stages\"),]$recid_rate_date1}\n\n#remove label legend if by year\n{if(ALL.BY) titledates2 &lt;- c(as.factor(date1),as.factor(date2)) else titledates2 &lt;- \"\"}\n\n#plot!\ngg_dot &lt;- tabout.dates |&gt;\n  # rearrange the factor levels for programs by rates for date1\n  arrange(recid_rate_date1) |&gt;\n  mutate(discipline = fct_inorder(programs_clean)) |&gt;\n  \n  ggplot() +\n  # remove axes and superfluous grids\n  theme_classic() +\n  theme(axis.title = element_blank(),\n        axis.ticks.y = element_blank(),\n        axis.line = element_blank()) +\n  \n  # add a dummy point for scaling purposes\n  geom_point(aes(x = 0.7, y = programs_clean), \n             size = 0, col = \"white\") + \n  \n  # add the horizontal programs_clean lines\n  geom_hline(yintercept = 1:length(tabout.dates$programs_clean), col = \"grey80\") +\n  \n  # add a point for each date1 recidivism rate\n  geom_point(aes(x = recid_rate_date1, y = programs_clean), \n             size = 11, col = date1c) +\n\n  # add a point for each date2 recidivism rate\n {if(ALL.BY) geom_point(aes(x = recid_rate_date2, y = programs_clean),size = 11, col = date2c)} + \n\n  # round each date2 recidivism rate\n  {if(ALL.BY) geom_text(aes(x = recid_rate_date2, y = programs_clean, label = paste0(round(recid_rate_date2, 2))), col = \"black\")} +\n\n  # round each date1 recidivism rate\n  geom_text(aes(x = recid_rate_date1, y = programs_clean, \n                label = paste0(round(recid_rate_date1, 2))),\n            col = \"white\") +\n\n  # add a label above the first two points\n  geom_text_repel(aes(x = x, y = y, label = label, col = label), force_pull = 50,\n            data.frame(x     = plotit, \n                       y     = length(tabout.dates$programs_clean) + 2, \n                       label = titledates2), size = 6) +\n  scale_color_manual(values = c(date1c, date2c), guide = \"none\") +\n  \n  # manually specify the x-axis\n  scale_x_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1), \n                     labels = c(\"0\",\"0.25\", \"0.50\", \"0.75\", \"1\")) +\n  # manually set the spacing above and below the plot\n  scale_y_discrete(expand = c(0.2, 0)) \n\n#add titles/captions\ngg_dot + \n  {if (ALL.BY) ggtitle(\"Recidivism Rates across EBBR programs\\n\") else ggtitle(paste0(\"Recidivism Rates across EBBR programs\\n\",titledates))} +\n  #only print caption if a program is missing data\n  {if(length(prg.NA)!=0) labs(caption = capture.output(cat(\"The following programs were missing data in some years:\", unique(toupper(prg.NA)), sep=\" \")))}+\n  theme(plot.caption=element_text(hjust=0))\n\n\n\n\n\n\n\n\n\n\n\n\n\nReveal R code\n#plot!\ngg_line &lt;- tabout.dates |&gt;\n  # add a variable for when rates are higher in date1 than in date2 (for colours)\n  mutate(date1high = recid_rate_date1 &gt; recid_rate_date2) |&gt;\n  ggplot() +\n  # add a line segment that goes from date1 to date2 for each program\n  geom_segment(aes(x     = 1,                xend = 2, \n                   y     = recid_rate_date1, yend = recid_rate_date2,\n                   group = programs_clean,\n                   col = date1high), \n               size = 1.2) +\n  # set the colors\n  scale_color_manual(values = c(date1c, date2c), guide = \"none\")  +\n  # remove all axis stuff\n  theme_classic() + \n  theme(axis.line  = element_blank(),\n        axis.text  = element_blank(),\n        axis.title = element_blank(),\n        axis.ticks = element_blank()) +\n  # add vertical lines that act as axis for date1\n  geom_segment(x    = 1, \n               xend = 1, \n               y    = min(tabout.dates$recid_rate_date1, na.rm=T) - 0.1,\n               yend = max(tabout.dates$recid_rate_date1, na.rm=T) + 0.125,\n               col  = \"grey70\", size = 0.5) +\n  # add vertical lines that act as axis for date2\n  geom_segment(x    = 2, \n               xend = 2, \n               y    = min(tabout.dates$recid_rate_date1, na.rm=T) - 0.1,\n               yend = max(tabout.dates$recid_rate_date1, na.rm=T) + 0.125,\n               col  = \"grey70\", size = 0.5) +\n  # add the labels above their axes\n  geom_text(aes(x = x, y = y, label = label),\n            data = data.frame(x = 1:2, \n                              y = max(tabout.dates$recid_rate_date2, na.rm=T) + 0.05,\n                              label = c(date1, date2)),\n            col = \"grey30\",\n            size = 6)  +\n  # add the label and rate for each program next the date1 axis\n  geom_text_repel(aes(x     = 1 - 0.03, \n                      y     = recid_rate_date1, \n                      label = paste0(programs_clean, \", \", round(recid_rate_date1, 2))),\n             force_pull   = 0,\n             nudge_y      = 0.05, nudge_x = -0.075,\n             direction    = \"y\",\n             hjust        = 1,\n             segment.size = 0.2,\n             max.iter = 1e4, max.time = 1) +\n  # add the rate next to each point on the date2 axis\n  geom_text(aes(x = 2 + 0.08, \n                y = recid_rate_date2, \n                label = paste0(round(recid_rate_date2, 2))),\n            col = \"grey30\") +\n  # set the limits of the x-axis so that the labels are not cut off\n  scale_x_continuous(limits = c(0.5, 2.1)) + \n  \n  # add the white outline for the points at each rate for date1\n  geom_point(aes(x = 1, \n                 y = recid_rate_date1), size = 4.5,\n             col = \"white\") +\n  # add the white outline for the points at each rate for date2\n  geom_point(aes(x = 2, \n                 y = recid_rate_date2), size = 4.5,\n             col = \"white\") +\n  \n  # add the actual points at each rate for date1\n  geom_point(aes(x = 1, \n                 y = recid_rate_date1), size = 4,\n             col = \"grey60\") +\n  # add the actual points at each rate for date2\n  geom_point(aes(x = 2, \n                 y = recid_rate_date2), size = 4,\n             col = \"grey60\") \n  \ngg_line +\n  ggtitle(\"Recidivism Rates across EBBR programs\\n\") +\n  #only print caption if a program is missing data\n  {if(length(prg.NA)!=0) labs(caption = capture.output(cat(\"The following programs were missing data in some years:\", unique(toupper(prg.NA)), sep=\" \")))}+\n  theme(plot.caption=element_text(hjust=0))",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>GDOC Recidivism Analysis</span>"
    ]
  },
  {
    "objectID": "va_cs.html#r-session",
    "href": "va_cs.html#r-session",
    "title": "GDOC Recidivism Analysis",
    "section": "R Session",
    "text": "R Session\n\n\nReveal R code\n#for reproducibility\nsi &lt;- sessioninfo::session_info()\nsi$packages$library &lt;- NULL\nsi$platform$pandoc &lt;- NULL\nsi\n## ─ Session info ───────────────────────────────────────────────────────────────\n##  setting  value\n##  version  R version 4.4.1 (2024-06-14 ucrt)\n##  os       Windows 10 x64 (build 19045)\n##  system   x86_64, mingw32\n##  ui       RTerm\n##  language (EN)\n##  collate  English_United States.utf8\n##  ctype    English_United States.utf8\n##  tz       America/Denver\n##  date     2024-08-12\n## \n## ─ Packages ───────────────────────────────────────────────────────────────────\n##  package       * version    date (UTC) lib source\n##  askpass         1.2.0      2023-09-03 []  CRAN (R 4.4.1)\n##  b64             0.1.1      2024-07-01 []  CRAN (R 4.4.1)\n##  backports       1.5.0      2024-05-23 []  CRAN (R 4.4.0)\n##  base64enc       0.1-3      2015-07-28 []  CRAN (R 4.4.0)\n##  bslib           0.7.0      2024-03-29 []  CRAN (R 4.4.1)\n##  bsplus          0.1.4      2022-11-16 []  CRAN (R 4.4.1)\n##  cachem          1.1.0      2024-05-16 []  CRAN (R 4.4.1)\n##  charlatan     * 0.5.1      2023-09-13 []  CRAN (R 4.4.1)\n##  checkmate       2.3.2      2024-07-29 []  CRAN (R 4.4.1)\n##  cli             3.6.3      2024-06-21 []  CRAN (R 4.4.1)\n##  codetools       0.2-20     2024-03-31 []  CRAN (R 4.4.1)\n##  colorspace      2.1-0      2023-01-23 []  CRAN (R 4.4.1)\n##  crosstalk     * 1.2.1.9000 2024-08-01 []  Github (rstudio/crosstalk@4f76bd6)\n##  devtools      * 2.4.5      2022-10-11 []  CRAN (R 4.4.1)\n##  digest          0.6.36     2024-06-23 []  CRAN (R 4.4.1)\n##  downloadthis  * 0.4.0      2024-07-04 []  CRAN (R 4.4.1)\n##  dplyr         * 1.1.4      2023-11-17 []  CRAN (R 4.4.1)\n##  DT            * 0.33       2024-04-04 []  CRAN (R 4.4.1)\n##  ellipsis        0.3.2      2021-04-29 []  CRAN (R 4.4.1)\n##  evaluate        0.24.0     2024-06-10 []  CRAN (R 4.4.1)\n##  fansi           1.0.6      2023-12-08 []  CRAN (R 4.4.1)\n##  farver          2.1.2      2024-05-13 []  CRAN (R 4.4.1)\n##  fastmap         1.2.0      2024-05-15 []  CRAN (R 4.4.1)\n##  forcats       * 1.0.0      2023-01-29 []  CRAN (R 4.4.1)\n##  fs              1.6.4      2024-04-25 []  CRAN (R 4.4.1)\n##  generics        0.1.3      2022-07-05 []  CRAN (R 4.4.1)\n##  ggplot2       * 3.5.1      2024-04-23 []  CRAN (R 4.4.1)\n##  ggrepel       * 0.9.5      2024-01-10 []  CRAN (R 4.4.1)\n##  glue            1.7.0      2024-01-09 []  CRAN (R 4.4.1)\n##  gtable          0.3.5      2024-04-22 []  CRAN (R 4.4.1)\n##  hms             1.1.3      2023-03-21 []  CRAN (R 4.4.1)\n##  htmltools       0.5.8.1    2024-04-04 []  CRAN (R 4.4.1)\n##  htmlwidgets     1.6.4      2023-12-06 []  CRAN (R 4.4.1)\n##  httpuv          1.6.15     2024-03-26 []  CRAN (R 4.4.1)\n##  jquerylib       0.1.4      2021-04-26 []  CRAN (R 4.4.1)\n##  jsonlite        1.8.8      2023-12-04 []  CRAN (R 4.4.1)\n##  knitr         * 1.48       2024-07-07 []  CRAN (R 4.4.1)\n##  labeling        0.4.3      2023-08-29 []  CRAN (R 4.4.0)\n##  later           1.3.2      2023-12-06 []  CRAN (R 4.4.1)\n##  lazyeval        0.2.2      2019-03-15 []  CRAN (R 4.4.1)\n##  lifecycle       1.0.4      2023-11-07 []  CRAN (R 4.4.1)\n##  lubridate     * 1.9.3      2023-09-27 []  CRAN (R 4.4.1)\n##  magick          2.8.4      2024-07-14 []  CRAN (R 4.4.1)\n##  magrittr        2.0.3      2022-03-30 []  CRAN (R 4.4.1)\n##  MASS            7.3-60.2   2024-04-26 []  CRAN (R 4.4.1)\n##  matrixStats     1.3.0      2024-04-11 []  CRAN (R 4.4.1)\n##  memoise         2.0.1      2021-11-26 []  CRAN (R 4.4.1)\n##  mime            0.12       2021-09-28 []  CRAN (R 4.4.0)\n##  miniUI          0.1.1.1    2018-05-18 []  CRAN (R 4.4.1)\n##  munsell         0.5.1      2024-04-01 []  CRAN (R 4.4.1)\n##  officer       * 0.6.6      2024-05-05 []  CRAN (R 4.4.1)\n##  openssl         2.2.0      2024-05-16 []  CRAN (R 4.4.1)\n##  pander          0.6.5      2022-03-18 []  CRAN (R 4.4.1)\n##  pillar          1.9.0      2023-03-22 []  CRAN (R 4.4.1)\n##  pkgbuild        1.4.4      2024-03-17 []  CRAN (R 4.4.1)\n##  pkgconfig       2.0.3      2019-09-22 []  CRAN (R 4.4.1)\n##  pkgload         1.4.0      2024-06-28 []  CRAN (R 4.4.1)\n##  plyr            1.8.9      2023-10-02 []  CRAN (R 4.4.1)\n##  processx        3.8.4      2024-03-16 []  CRAN (R 4.4.1)\n##  profvis         0.3.8      2023-05-02 []  CRAN (R 4.4.1)\n##  promises        1.3.0      2024-04-05 []  CRAN (R 4.4.1)\n##  pryr            0.1.6      2023-01-17 []  CRAN (R 4.4.1)\n##  ps              1.7.7      2024-07-02 []  CRAN (R 4.4.1)\n##  purrr         * 1.0.2      2023-08-10 []  CRAN (R 4.4.1)\n##  quarto        * 1.4.4      2024-07-20 []  CRAN (R 4.4.1)\n##  R6              2.5.1      2021-08-19 []  CRAN (R 4.4.1)\n##  ragg            1.3.2      2024-05-15 []  CRAN (R 4.4.1)\n##  rapportools     1.1        2022-03-22 []  CRAN (R 4.4.1)\n##  Rcpp            1.0.13     2024-07-17 []  CRAN (R 4.4.1)\n##  readr         * 2.1.5      2024-01-10 []  CRAN (R 4.4.1)\n##  remotes         2.5.0      2024-03-17 []  CRAN (R 4.4.1)\n##  reshape2        1.4.4      2020-04-09 []  CRAN (R 4.4.1)\n##  rlang           1.1.4      2024-06-04 []  CRAN (R 4.4.1)\n##  rmarkdown     * 2.27       2024-05-17 []  CRAN (R 4.4.1)\n##  rstudioapi      0.16.0     2024-03-24 []  CRAN (R 4.4.1)\n##  sass            0.4.9      2024-03-15 []  CRAN (R 4.4.1)\n##  scales          1.3.0      2023-11-28 []  CRAN (R 4.4.1)\n##  sessioninfo     1.2.2      2021-12-06 []  CRAN (R 4.4.1)\n##  shiny           1.9.1      2024-08-01 []  CRAN (R 4.4.1)\n##  stringi         1.8.4      2024-05-06 []  CRAN (R 4.4.0)\n##  stringr       * 1.5.1      2023-11-14 []  CRAN (R 4.4.1)\n##  summarytools  * 1.0.1      2022-05-20 []  CRAN (R 4.4.1)\n##  summarywidget * 0.0.0.9000 2024-08-01 []  Github (kent37/summarywidget@c0da3f7)\n##  systemfonts     1.1.0      2024-05-15 []  CRAN (R 4.4.1)\n##  textshaping     0.4.0      2024-05-24 []  CRAN (R 4.4.1)\n##  tibble        * 3.2.1      2023-03-20 []  CRAN (R 4.4.1)\n##  tidyr         * 1.3.1      2024-01-24 []  CRAN (R 4.4.1)\n##  tidyselect      1.2.1      2024-03-11 []  CRAN (R 4.4.1)\n##  tidyverse     * 2.0.0      2023-02-22 []  CRAN (R 4.4.1)\n##  timechange      0.3.0      2024-01-18 []  CRAN (R 4.4.1)\n##  tzdb            0.4.0      2023-05-12 []  CRAN (R 4.4.1)\n##  urlchecker      1.0.1      2021-11-30 []  CRAN (R 4.4.1)\n##  usethis       * 3.0.0      2024-07-29 []  CRAN (R 4.4.1)\n##  utf8            1.2.4      2023-10-22 []  CRAN (R 4.4.1)\n##  uuid            1.2-0      2024-01-14 []  CRAN (R 4.4.0)\n##  vctrs           0.6.5      2023-12-01 []  CRAN (R 4.4.1)\n##  whisker         0.4.1      2022-12-05 []  CRAN (R 4.4.1)\n##  withr           3.0.0      2024-01-16 []  CRAN (R 4.4.1)\n##  xfun            0.46       2024-07-18 []  CRAN (R 4.4.1)\n##  xml2            1.3.6      2023-12-04 []  CRAN (R 4.4.1)\n##  xtable          1.8-4      2019-04-21 []  CRAN (R 4.4.1)\n##  yaml            2.3.9      2024-07-05 []  CRAN (R 4.4.1)\n##  zip             2.3.1      2024-01-27 []  CRAN (R 4.4.1)\n## \n## \n## ──────────────────────────────────────────────────────────────────────────────",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>GDOC Recidivism Analysis</span>"
    ]
  },
  {
    "objectID": "cwc_report.html",
    "href": "cwc_report.html",
    "title": "Center Wing Coalition Report",
    "section": "",
    "text": "Introduction\nIn recent years, there has been a growing push for reform within correctional systems aimed at rehabilitation and reducing recidivism rates. While these efforts are often well-intentioned, they come at a significant financial cost to taxpayers and lack substantial evidence of effectiveness. This report by the Center Wing Coalition aims to provide a data-driven justification for reducing the budget for GDOC’s correctional programs and eliminating existing staff vacancies, arguing that resources could be better allocated for proven methods of crime reduction rather than for providing services for people in prison.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Center Wing Coalition Report</span>"
    ]
  },
  {
    "objectID": "cwc_report.html#analysis-of-program-effectiveness",
    "href": "cwc_report.html#analysis-of-program-effectiveness",
    "title": "Center Wing Coalition Report",
    "section": "Analysis of Program Effectiveness",
    "text": "Analysis of Program Effectiveness\nThe correctional program in question has been in operation for several years with substantial funding allocated annually. However, comprehensive data analysis reveals several key shortcomings:\n\nRecidivism Rates: Despite the program’s objectives, recidivism rates among participants, provided by GDOC’s own Research and Analysis team, remain at 67 percent.1 This suggests that the program may not be effectively addressing the root causes of criminal behavior.\n\n\nCost-Effectiveness: The cost to maintain staffing for the programs opens avenues for unnecessary spending. This raises questions about the program’s efficiency in using taxpayer dollars and the agency’s need for such significant funding.\nLong-Term Outcomes: There are no proven long-term gains from these programs, and resources can be better put toward paying for staff training and retention.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Center Wing Coalition Report</span>"
    ]
  },
  {
    "objectID": "cwc_report.html#budgetary-considerations",
    "href": "cwc_report.html#budgetary-considerations",
    "title": "Center Wing Coalition Report",
    "section": "Budgetary Considerations",
    "text": "Budgetary Considerations\nThe financial resources allocated to these correctional programs could be reallocated to more cost-effective strategies to maintain public safety. Examples include the following:\n\nInvestment in Education: Funding education and skill-building programs within prisons has shown a positive correlation with reduced recidivism rates and improved employability upon release.\nSupport for Community Reintegration: Enhanced support for transitional housing, job placement services, and mental health programs in communities can provide a more holistic approach to reducing crime and improving public safety.\nFront-end violent crime strategies: Increased law enforcement presence will deter crime in our communities.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Center Wing Coalition Report</span>"
    ]
  },
  {
    "objectID": "cwc_report.html#conclusion",
    "href": "cwc_report.html#conclusion",
    "title": "Center Wing Coalition Report",
    "section": "Conclusion",
    "text": "Conclusion\nThis bipartisan coalition recommends reallocating funding away from the correctional programs in question based on program effectiveness analysis and budgetary considerations. Doing so would not only maximize the impact of taxpayer investments but also enhance public safety by addressing the root causes of crime more effectively. By making informed decisions supported by data-driven insights, policymakers can ensure that funding prioritizes interventions that yield tangible and sustainable benefits for individuals and society as a whole.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Center Wing Coalition Report</span>"
    ]
  },
  {
    "objectID": "cwc_report.html#footnotes",
    "href": "cwc_report.html#footnotes",
    "title": "Center Wing Coalition Report",
    "section": "",
    "text": "The following programs were analyzed by the CWC for program years 2016 through 2017:\nAnger Management\nResidential Drug Abuse Program\nDialectical Behavior Therapy\nChallenge Program\nSteps Toward Awareness, Growth, and Emotional Strength Program\n↩︎",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Center Wing Coalition Report</span>"
    ]
  },
  {
    "objectID": "va_cs.html#data-cleaning-and-manipulation",
    "href": "va_cs.html#data-cleaning-and-manipulation",
    "title": "GDOC Recidivism Analysis",
    "section": "Data Cleaning and Manipulation",
    "text": "Data Cleaning and Manipulation\n\nDuplicates\nWhat other pieces of information might be relevant to what we need to know about the data? Since it appears to be person-level data from our data exploration summary, let’s check to make sure that there aren’t any duplicate observations.\n\n\nReveal R code\n#are there any duplicates?\nroster[duplicated(roster) | duplicated(roster, fromLast=TRUE),]\n\n#how many duplicates?\ndupct &lt;- length(unique(\n  roster[duplicated(roster) | duplicated(roster, fromLast=TRUE),]\n  ))\n\n\n\n  \n\n\n\n\nIt’s a really good thing we checked! From the table above it appears we have 5 duplicate observations/rows in our data. Let’s remove them and keep exploring!\n\n\nReveal R code\n#deduplicate across all columns\nroster.nodup &lt;- roster[!duplicated(roster), ]\n\n\n#check for dups again\nroster.nodup[duplicated(roster.nodup) | duplicated(roster.nodup, fromLast=TRUE),]\n\n\n\n  \n\n\n\n\nAlright! No more duplicates! What else could require cleaning that we haven’t thought of?\n\n\nRecoding\nWe need to take a closer look at our other variables that may help us report out what the GDOC director needs. Let’s start with our programs, dt, and ret.\n\nPROGRAMSDTRET\n\n\n\n\nReveal R code\n#count total number of programs\ndefine_keywords(title.freq = \"PROGRAMS values\")\nprint(freq(roster.nodup$programs, report.nas = FALSE, cumul = FALSE, display.type = FALSE), \n      method = \"render\", footnote = NA, Variable = \"\")\n\n#count number of programs\nprgnum &lt;- n_distinct(roster.nodup$programs)\n\n\n\nPROGRAMS values\n\n\n\n\n\n\nFreq\n%\n\n\n\n\nam\n7\n14.00\n\n\nbcs\n3\n6.00\n\n\nbgs\n1\n2.00\n\n\nbrave\n6\n12.00\n\n\nbrv\n2\n4.00\n\n\nchallenge\n6\n12.00\n\n\ndbt\n2\n4.00\n\n\nfbt\n1\n2.00\n\n\nmhsd\n3\n6.00\n\n\nrdap\n3\n6.00\n\n\nrdp\n1\n2.00\n\n\nresolve\n3\n6.00\n\n\nsotrt\n3\n6.00\n\n\nstages\n9\n18.00\n\n\nTotal\n50\n100.00\n\n\n\n\n\n\n\n\n\n\n\nReveal R code\n#check out weird date values\nyeardt &lt;- as.factor(year(roster.nodup$dt))\ndefine_keywords(title.freq = \"DT values\")\nprint(freq(yeardt, report.nas = FALSE, cumul = FALSE, display.type = FALSE), \n      method = \"render\", footnote = NA, Variable = \"\")\n\n\n\nDT values\n\n\n\n\n\n\nFreq\n%\n\n\n\n\n1997\n1\n2.00\n\n\n2007\n1\n2.00\n\n\n2017\n23\n46.00\n\n\n2018\n25\n50.00\n\n\nTotal\n50\n100.00\n\n\n\n\n\n\n\n\n\n\n\nReveal R code\n#check out weird return values\ndefine_keywords(title.freq = \"RET values\")\nprint(freq(roster.nodup$ret, report.nas = FALSE, cumul = FALSE, display.type = FALSE), \n      method = \"render\", footnote = NA, Variable = \"\")\n\n\n\nRET values\n\n\n\n\n\n\nFreq\n%\n\n\n\n\n-1\n1\n2.00\n\n\n0\n31\n62.00\n\n\n1\n16\n32.00\n\n\n2\n1\n2.00\n\n\n11\n1\n2.00\n\n\nTotal\n50\n100.00\n\n\n\n\n\n\n\n\n\n\nHm - it looks like there are more than 10 programs; 14 programs to be exact. That doesn’t match what you know about your GDOC EBRR programs! Could there be something wrong with the data? It looks like there are also some errors in your data across programs, ret, and dt!\nWe’ll probably have to make some assumptions on our data. For example, ret must be our variable that indicates whether an individual enrolled in an EBRR program returned to prison within 365 days of their release. While the majority of the values are 0s and 1s, a select few are greater than 1 or less than 0. Clean them up and check your work so you can accurately report all EBRR programs and their associated recidivism rates.\n\nPROGRAMS CleanDT CleanRET Clean\n\n\n\n\nReveal R code\n#clean program names\nroster.clean &lt;- roster.nodup |&gt;\n  #fix programs, dates, and returns\n  mutate(programs_clean = case_when(programs == \"bgs\" ~ \"bcs\",\n                                    programs == \"fbt\" ~ \"dbt\",\n                                    programs == \"brv\" ~ \"brave\",\n                                    programs == \"rdp\" ~ \"rdap\",\n                                    TRUE ~ programs),\n         \n         #dates - assume that wrong dates occurred in 2017\n         dt      = case_when(year(dt) &lt; 2017 ~ `year&lt;-`(dt, 2017),\n                             TRUE ~ dt),\n         \n         #returns - assume that wrong returns should all be =1\n         ret            = case_when(ret == -1 ~ 1,\n                                    ret == 2  ~ 1,\n                                    ret == 11 ~ 1,\n                                    TRUE ~ ret)\n  )\n\n\n#review cleaned program names\nroster.clean |&gt;\n  count(programs_clean)\n\n\n\n  \n\n\n\n\n\n\n\nReveal R code\n#review date values\nroster.clean |&gt;\n  count(year(dt))\n\n\n\n  \n\n\n\n\n\n\n\nReveal R code\n#review out weird return values\nroster.clean |&gt;\n  count(ret)\n\n\n\n  \n\n\n\n\n\n\nMuch better! 10 programs (programs_clean) as expected for our DOC, and cleaned dates (dt) and returns (ret)!\n\n\nCalculating rates\nNow that we have a clean dataset, we can finally calculate recidivism rates for all of our programs. Since we have dates spanning two years from the dt column, from 2017-04-14 to 2018-06-30, perhaps we should calculate recidivism rates overall and by year.\n\nOverallBy Year\n\n\n\n\nReveal R code\n##create dataset of numerators and denominators\n#recidivism rates overall\nroster2.1 &lt;- roster.clean |&gt;\n  mutate(year = factor(year(dt))) |&gt;\n  select(-c(client_names,age,programs)) |&gt;\n  group_by(programs_clean) |&gt;\n  count(ret) |&gt;\n  mutate(clients_served = sum(n),\n         recid_rate_all = case_when(ret == 1 ~ round(n/clients_served,2),\n                                    ret == 0 ~ 0)\n  ) |&gt;\n  group_by(programs_clean) |&gt;\n  slice(n()) |&gt;\n  select(-c(ret, n)) |&gt;\n  rename(clients_served_all = clients_served)\n\n#recidivism rates by year\nroster2.2 &lt;- roster.clean |&gt;\n  mutate(year = factor(year(dt))) |&gt;\n  select(-c(client_names,age,programs)) |&gt;\n  group_by(programs_clean,year) |&gt;\n  count(ret,year) |&gt;\n  mutate(clients_served = sum(n),\n         recid_rate_year= case_when(ret == 1 ~ round(n/clients_served,2),\n                                    ret == 0 ~ 0)\n  ) |&gt;\n  group_by(programs_clean,year) |&gt;\n  slice(n()) |&gt;\n  select(-c(ret, n)) |&gt;\n  rename(clients_served_year = clients_served)\n\n#combine data by programs to capture recidivism rates overall and by year\nroster2 &lt;- inner_join(roster2.1, roster2.2, by = \"programs_clean\")\n\n\n#verify that join did not lose any observations\ntriplecheck &lt;- anti_join(roster2.1, roster2.2, by = \"programs_clean\")\n\n\n#print out overall rates\nroster2.1 |&gt;\n  arrange(programs_clean) |&gt;\n  select(programs_clean,recid_rate_all) |&gt; datatable(rownames=FALSE, colnames=c('Program', 'Overall Recidivism Rate'), \n                          options=list(pageLength=10, dom='t'))\n\n\n\n\n\n\n\n\n\n\nReveal R code\n#CROSSTALK by year rates\nshared_roster2 &lt;- SharedData$new(roster2.2 |&gt;\n  arrange(year,programs_clean) |&gt;\n  select(year,programs_clean,recid_rate_year))\n\nfilter_checkbox(\"year\", \"Select Year\", shared_roster2, ~year, inline=FALSE)\ndatatable(shared_roster2, rownames=FALSE, colnames=c('Year', 'Program', 'Recidivism Rate'), \n                          options=list(pageLength=10, dom='tip'))\n\n\n\nSelect Year\n\n\n\n\n2017\n\n\n\n\n\n2018\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStaff data\nGreat work! Now let’s take a look at our program staffing! Our DOC captures 10 Evidence Based Recidivism Reduction (EBRR) programs listed by the Federal Bureau of Prisons and the individuals involved. The name of our data is staff.\n\n\nReveal R code\n#what's in our data\nprint(dfSummary(staff, varnumbers = FALSE, valid.col = FALSE), \n      method = \"render\", footnote = NA)\n\n#capture number of columns for printing in text\nnumcolst &lt;- ncol(staff)\n\n\n\nData Frame Summary\nstaff\nDimensions: 80 x 2\n  Duplicates: 0\n\n\n\n\n\n\n\n\n\n\n\n\nVariable\nStats / Values\nFreqs (% of Valid)\nGraph\nMissing\n\n\n\n\nstaff [character]\n\n\n\n1. Alease VonRueden\n\n\n2. Ancil Blanda\n\n\n3. Angeles Hettinger-Bailey\n\n\n4. Antone Bartoletti\n\n\n5. Archibald D'Amore DVM\n\n\n6. Asher Hansen-Heidenreich\n\n\n7. Ashton Konopelski\n\n\n8. Bernadette Pfeffer Ph.D.\n\n\n9. Bunk Durgan-Zemlak\n\n\n10. Carolynn Rippin\n\n\n[ 70 others ]\n\n\n\n\n\n\n1\n(\n1.2%\n)\n\n\n1\n(\n1.2%\n)\n\n\n1\n(\n1.2%\n)\n\n\n1\n(\n1.2%\n)\n\n\n1\n(\n1.2%\n)\n\n\n1\n(\n1.2%\n)\n\n\n1\n(\n1.2%\n)\n\n\n1\n(\n1.2%\n)\n\n\n1\n(\n1.2%\n)\n\n\n1\n(\n1.2%\n)\n\n\n70\n(\n87.5%\n)\n\n\n\n\n0 (0.0%)\n\n\nprg [character]\n\n\n\n1. dbt\n\n\n2. stages\n\n\n3. sotrt\n\n\n4. brave\n\n\n5. mhsd\n\n\n6. resolve\n\n\n7. rdap\n\n\n8. stg\n\n\n9. bcs\n\n\n10. challenge\n\n\n[ 3 others ]\n\n\n\n\n\n\n15\n(\n18.8%\n)\n\n\n12\n(\n15.0%\n)\n\n\n11\n(\n13.8%\n)\n\n\n6\n(\n7.5%\n)\n\n\n6\n(\n7.5%\n)\n\n\n6\n(\n7.5%\n)\n\n\n5\n(\n6.2%\n)\n\n\n5\n(\n6.2%\n)\n\n\n4\n(\n5.0%\n)\n\n\n4\n(\n5.0%\n)\n\n\n6\n(\n7.5%\n)\n\n\n\n\n0 (0.0%)\n\n\n\n\n\n\n\n\nIt appears we only have 2 variables in the program staffing data. Let’s keep exploring! It appears to be person-level data again! Why don’t we check for duplicates just in case.\n\n\nReveal R code\n#are there any duplicates?\nstaff[duplicated(staff) | duplicated(staff, fromLast=TRUE),]\n\n\n\n  \n\n\n\n\nPhew! No duplicates. That was a close one.\nLooking closer at the summary, yet again we have data with more than 10 programs; 13 to be exact. And there appear to be some errors in the data (again!?)! Clean them up so you can accurately report all EBRR programs and their associated program staff, and let’s see how many staff we have by program! We’ll be able to use this in our final report to our Director.\n\nPRGPRG Clean\n\n\n\n\nReveal R code\n#count total number of programs\ndefine_keywords(title.freq = \"PRG values\")\nprint(freq(staff$prg, report.nas = FALSE, cumul = FALSE, display.type = FALSE), \n      method = \"render\", footnote = NA, Variable = \"\")\n\n\n\nPRG values\n\n\n\n\n\n\nFreq\n%\n\n\n\n\nam\n2\n2.50\n\n\nbcs\n4\n5.00\n\n\nbrave\n6\n7.50\n\n\nbrv\n2\n2.50\n\n\nchallenge\n4\n5.00\n\n\ndbt\n15\n18.75\n\n\nmhsd\n6\n7.50\n\n\nrdap\n5\n6.25\n\n\nresol\n2\n2.50\n\n\nresolve\n6\n7.50\n\n\nsotrt\n11\n13.75\n\n\nstages\n12\n15.00\n\n\nstg\n5\n6.25\n\n\nTotal\n80\n100.00\n\n\n\n\n\n\n\n\n\n\n\nReveal R code\n#clean program names\nstaff.clean &lt;- staff |&gt;\n  mutate(programs_clean = case_when(prg == \"resol\" ~ \"resolve\",\n                                    prg == \"brv\" ~ \"brave\",\n                                    prg == \"stg\" ~ \"stages\",\n                                    TRUE ~ prg))\n\n#create dataset of staff counts\nstaff2 &lt;- staff.clean |&gt;\n  select(-c(staff,prg)) |&gt;\n  count(programs_clean) |&gt;\n  rename(num_staff = n)\n\n\n#check cleaned program names\nstaffcheck &lt;- staff.clean |&gt;\n  count(programs_clean,prg)\n\n#print staffing\nstaff.clean |&gt;\n  count(programs_clean)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>GDOC Recidivism Analysis</span>"
    ]
  },
  {
    "objectID": "va_cs.html#final-report",
    "href": "va_cs.html#final-report",
    "title": "GDOC Recidivism Analysis",
    "section": "Final Report",
    "text": "Final Report\nThis exploratory document has been really useful for our internal purposes! But what if we want to get all of the pertinent info into a single report for your Director in a format they can actually digest; something similar to the original report?\n\n\n\n\n\n\nExpand to view the R Markdown that produces the PDF/DOCX\n\n\n\n\n\n\n\n [1] ---                                                                                                                                                                                                                                                                                                                                                                                                                                       \n [2] title: \"GDOC Program Recidivism/Staffing Requirements\"                                                                                                                                                                                                                                                                                                                                                                                    \n [3] subtitle: \"`r format(Sys.Date(), '%B %Y')`\"                                                                                                                                                                                                                                                                                                                                                                                               \n [4] geometry: \"left=1.5cm,right=1.5cm,top=0cm,bottom=1cm\"                                                                                                                                                                                                                                                                                                                                                                                     \n [5] ---                                                                                                                                                                                                                                                                                                                                                                                                                                       \n [6] \\\\setlength{\\\\headsep}{-0.25cm}                                                                                                                                                                                                                                                                                                                                                                                                           \n [7] \\\\pagenumbering{gobble}                                                                                                                                                                                                                                                                                                                                                                                                                   \n [8] \\\\vspace{-2.6truecm}                                                                                                                                                                                                                                                                                                                                                                                                                      \n [9] ```{r pretable, echo=FALSE, message=FALSE, warning=FALSE}                                                                                                                                                                                                                                                                                                                                                                                 \n[10] library(charlatan)                                                                                                                                                                                                                                                                                                                                                                                                                        \n[11] library(lubridate)                                                                                                                                                                                                                                                                                                                                                                                                                        \n[12] library(tidyverse)                                                                                                                                                                                                                                                                                                                                                                                                                        \n[13] library(knitr)                                                                                                                                                                                                                                                                                                                                                                                                                            \n[14] library(ggrepel)                                                                                                                                                                                                                                                                                                                                                                                                                          \n[15] #data setup                                                                                                                                                                                                                                                                                                                                                                                                                               \n[16] source(\"data_setup.R\")                                                                                                                                                                                                                                                                                                                                                                                                                    \n[17] source(\"re_report.R\")                                                                                                                                                                                                                                                                                                                                                                                                                     \n[18] source(\"execute.R\")                                                                                                                                                                                                                                                                                                                                                                                                                       \n[19] source(\"toggle.R\")                                                                                                                                                                                                                                                                                                                                                                                                                        \n[20] ```                                                                                                                                                                                                                                                                                                                                                                                                                                       \n[21] This report includes the overall recidivism rates (`r date1`-`r date2`) for evidence-based programming provided in the Gotham Department of Corrections facilities for high-risk people. Staffing numbers describe how many full-time employees are needed over the course of a year to keep each program running. Each program facilitator completes extensive training and must complete eight hours of continuing education each year. \n[22] \\\\small                                                                                                                                                                                                                                                                                                                                                                                                                                   \n[23] ```{r table, echo=FALSE, message=FALSE, warning=FALSE}                                                                                                                                                                                                                                                                                                                                                                                    \n[24] #programs to remove per the CWC report                                                                                                                                                                                                                                                                                                                                                                                                    \n[25] source(\"rm_pgms.R\")                                                                                                                                                                                                                                                                                                                                                                                                                       \n[26] #deduplicate across all columns                                                                                                                                                                                                                                                                                                                                                                                                           \n[27] source(\"dedup.R\")                                                                                                                                                                                                                                                                                                                                                                                                                         \n[28] #clean program names                                                                                                                                                                                                                                                                                                                                                                                                                      \n[29] source(\"roster_clean.R\")                                                                                                                                                                                                                                                                                                                                                                                                                  \n[30] ##create dataset of numerators and denominators                                                                                                                                                                                                                                                                                                                                                                                           \n[31] #recidivism rates overall                                                                                                                                                                                                                                                                                                                                                                                                                 \n[32] source(\"rates.R\")                                                                                                                                                                                                                                                                                                                                                                                                                         \n[33] #clean program names                                                                                                                                                                                                                                                                                                                                                                                                                      \n[34] source(\"staff_clean.R\")                                                                                                                                                                                                                                                                                                                                                                                                                   \n[35] #create table dataset                                                                                                                                                                                                                                                                                                                                                                                                                     \n[36] source(\"tabledata.R\")                                                                                                                                                                                                                                                                                                                                                                                                                     \n[37] source(\"finaltable_report.R\")                                                                                                                                                                                                                                                                                                                                                                                                             \n[38] reportit |&gt; rename(Program           = \"program_official\",                                                                                                                                                                                                                                                                                                                                                                                \n[39]                    `Recidivism Rate` = \"recid_rate_all\",                                                                                                                                                                                                                                                                                                                                                                                  \n[40]                    Staffing          = \"num_staff\") |&gt;                                                                                                                                                                                                                                                                                                                                                                                    \n[41]   kable()                                                                                                                                                                                                                                                                                                                                                                                                                                 \n[42] ```                                                                                                                                                                                                                                                                                                                                                                                                                                       \n[43] \\\\vspace{-0.5truecm}                                                                                                                                                                                                                                                                                                                                                                                                                      \n[44] ```{r graphic, include=FALSE}                                                                                                                                                                                                                                                                                                                                                                                                             \n[45] source2 &lt;- function(file, start, end, ...) {                                                                                                                                                                                                                                                                                                                                                                                              \n[46]     file.lines &lt;- scan(file, what=character(), skip=start-1, nlines=end-start+1, sep='\\\\n')                                                                                                                                                                                                                                                                                                                                               \n[47]     file.lines.collapsed &lt;- paste(file.lines, collapse='\\\\n')                                                                                                                                                                                                                                                                                                                                                                             \n[48]     source(textConnection(file.lines.collapsed), ...)                                                                                                                                                                                                                                                                                                                                                                                     \n[49] }                                                                                                                                                                                                                                                                                                                                                                                                                                         \n[50] #manage the data to produce recidivism rates                                                                                                                                                                                                                                                                                                                                                                                              \n[51] source(\"cwc_unw.R\")                                                                                                                                                                                                                                                                                                                                                                                                                       \n[52] #manage the data to produce recidivism rates                                                                                                                                                                                                                                                                                                                                                                                              \n[53] #total clients served (all years, year1, year2)                                                                                                                                                                                                                                                                                                                                                                                           \n[54] source(\"cwc_w.R\")                                                                                                                                                                                                                                                                                                                                                                                                                         \n[55] #build bar chart of recidivism rates across programs                                                                                                                                                                                                                                                                                                                                                                                      \n[56] source2(\"va_cs_webr.qmd\",42,126)                                                                                                                                                                                                                                                                                                                                                                                                          \n[57] #plot print                                                                                                                                                                                                                                                                                                                                                                                                                               \n[58] pdf(width=6.5,height=5,pointsize=15,file=\"rrfinal.pdf\")                                                                                                                                                                                                                                                                                                                                                                                   \n[59] print(rrfinal)                                                                                                                                                                                                                                                                                                                                                                                                                            \n[60] dev.off()                                                                                                                                                                                                                                                                                                                                                                                                                                 \n[61] ggsave(\"rrfinal.png\", width = 8, height = 6, units = \"in\")                                                                                                                                                                                                                                                                                                                                                                                \n[62] ```                                                                                                                                                                                                                                                                                                                                                                                                                                       \n[63] \\\\begin{figure}                                                                                                                                                                                                                                                                                                                                                                                                                           \n[64] \\\\includegraphics{rrfinal.pdf}                                                                                                                                                                                                                                                                                                                                                                                                            \n[65] \\\\end{figure}                                                                                                                                                                                                                                                                                                                                                                                                                             \n[66] \\\\normalsize                                                                                                                                                                                                                                                                                                                                                                                                                              \n[67] \\\\vspace{-1truecm}                                                                                                                                                                                                                                                                                                                                                                                                                        \n[68] ## Findings                                                                                                                                                                                                                                                                                                                                                                                                                               \n[69] \\\\vspace{-0.4cm}                                                                                                                                                                                                                                                                                                                                                                                                                          \n[70] Overall, the program with the lowest recidivism rates is: `r reportit[which(reportit$recid_rate_all == min(reportit$recid_rate_all)),]$program_official`. The program with the highest recidivism rates is: `r reportit[which(reportit$recid_rate_all == max(reportit$recid_rate_all)),]$program_official`. The average weighted recidivism rate is `r w.a`.                                                                              \n[71] \\\\vspace{-0.3cm}                                                                                                                                                                                                                                                                                                                                                                                                                          \n[72] ## Methodology                                                                                                                                                                                                                                                                                                                                                                                                                            \n[73] \\\\vspace{-0.4cm}                                                                                                                                                                                                                                                                                                                                                                                                                          \n[74] All participants have taken one of these programs right before release. The cohort analyzed were released from prison in `r date1-1` and `r date2-1`. Overall recidivism rates are computed.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>GDOC Recidivism Analysis</span>"
    ]
  },
  {
    "objectID": "cwc_report.html#analysis-of-programs-effectiveness",
    "href": "cwc_report.html#analysis-of-programs-effectiveness",
    "title": "Center Wing Coalition Report",
    "section": "Analysis of Programs’ Effectiveness",
    "text": "Analysis of Programs’ Effectiveness\nThe correctional programs in question has been in operation for several years with substantial funding allocated annually. However, comprehensive data analysis reveals several key shortcomings:\n\nRecidivism Rates: Despite the programs’ objectives, recidivism rates among participants, provided by GDOC’s own Research and Analysis team, remain at 47 percent.1 This suggests that programs may not be effectively addressing the root causes of criminal behavior.\n\n\nCost-Effectiveness: The cost to maintain staffing for the programs opens avenues for unnecessary spending. This raises questions about the programs’ efficiency in using taxpayer dollars and the agency’s need for such significant funding.\nLong-Term Outcomes: There are no proven long-term gains from these programs, and resources can be better put toward paying for staff training and retention.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Center Wing Coalition Report</span>"
    ]
  },
  {
    "objectID": "oldreport.html",
    "href": "oldreport.html",
    "title": "Old GDOC Report",
    "section": "",
    "text": "Recidivism and Staffing Requirements for Programs, January 2018\nThis report includes the one-year recidivism rates for evidence-based programming provided in the Gotham Department of Corrections facilities for high-risk people. Staffing numbers describe how many full-time employees are needed over the course of a year to keep each program running. Each program facilitator completes extensive training and must complete eight hours of continuing education each year.\nProgram (Graduated 2015)\nRecidivism Rate (2016)\nStaffing\n\n\n\n\nAnger Management\n0.90\n2\n\n\nThe Bureau Rehabilitation and Values Enhancement Program\n0.38\n9\n\n\nBasic Cognitive Skills\n0.41\n4\n\n\nThe Resolve Program\n0.59\n8\n\n\nResidential Drug Abuse Program\n0.36\n5\n\n\nDialectical Behavior Therapy\n0.57\n16\n\n\nSex Offender Treatment Program\n0.05\n11\n\n\nChallenge Program\n0.44\n4\n\n\nMental Health Step Down Program\n0.08\n7\n\n\nSteps Toward Awareness, Growth, and Emotional Strength Program\n0.92\n17",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Old GDOC Report</span>"
    ]
  },
  {
    "objectID": "oldreport.html#methodology",
    "href": "oldreport.html#methodology",
    "title": "Old GDOC Report",
    "section": "Methodology",
    "text": "Methodology\nAll participants have taken one of these programs right before release. The cohort analyzed were released from prison in 2016. One-year recidivism rates are computed.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Old GDOC Report</span>"
    ]
  },
  {
    "objectID": "oldreport.html#findings",
    "href": "oldreport.html#findings",
    "title": "Old GDOC Report",
    "section": "Findings",
    "text": "Findings\nOverall, the programs that resulted in the lowest recidivism rates are the Mental Health Step Down Program and the Sex Offender Treatment Program. The programs that have the highest recidivism rates are Anger Management and Steps Toward Awareness, Growth, and Emotional Strength Program.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Old GDOC Report</span>"
    ]
  },
  {
    "objectID": "oldreport.html#recidivism-and-staffing-requirements-for-programs-january-2018",
    "href": "oldreport.html#recidivism-and-staffing-requirements-for-programs-january-2018",
    "title": "Old GDOC Report",
    "section": "",
    "text": "Findings\nOverall, the programs that resulted in the lowest recidivism rates are the Mental Health Step Down Program and the Sex Offender Treatment Program. The programs that have the highest recidivism rates are Anger Management and Steps Toward Awareness, Growth, and Emotional Strength Program.\n\n\nMethodology\nAll participants have taken one of these programs right before release. The cohort analyzed were released from prison in 2016. One-year recidivism rates are computed.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Old GDOC Report</span>"
    ]
  }
]