---
title: "ADC: VA Case Study"
format: 
  html:
    embed-resources: true
    code-fold: show
    code-overflow: wrap
---

## Create simulated data

```{r setup, echo=FALSE, warning=FALSE, message=FALSE}

#packages
#install.packages("charlatan")
#install.packages("dplyr")
#install.packages("knitr")
#install.packages("ggplot2")

#activate!!
library(charlatan)
library(lubridate)
library(dplyr)
library(knitr)
library(ggplot2)


#programs
#https://www.bop.gov/inmates/fsa/docs/fsa_program_guide_2107.pdf
#https://www.bop.gov/inmates/fsa/docs/evidence_based_recidivism_reduction_programs.pdf
prgnm = c("am,0","am,0","am,1",
          "brave,0","brave,0","brave,1",
          "bcs,0","bcs,0","bcs,1",
          "resolve,0","resolve,0","resolve,1",
          "rdap,0","rdap,0","rdap,1",
          "dbt,0","dbt,0","dbt,1",
          "sotrt,0","sotrt,0","sotrt,1",
          "challenge,0","challenge,1",
          "mhsd,0","mhsd,1",
          "stages,0","stages,1",
          #spelling errors
          "bgs,0",
          "fbt,0",
          "brv,0",
          "rdp,0")
prgnm2 = c("am",
          "brave",
          "bcs",
          "resolve",
          "rdap",
          "dbt",
          "sotrt",
          "challenge",
          "mhsd",
          "stages",
          #spelling errors
          "brv",
          "stg",
          "resol")

#dataframe sizes: sizen - roster, sizen2 - program staff
sizen  = 50
sizen2 = 80
date   = 2021

##set up roster/recidivism dataframe
#create 40 person dataframe
set.seed(80)
roster <- data.frame(
  client_names = ch_name(sizen),
  age          = round(rnorm(sizen,29,5)),
  programs.temp= sample(prgnm, size=sizen, replace = TRUE),
  datestart    = sample(seq(as.Date(paste0(date,'/01/01')), as.Date(paste0(date,'/12/31')), by="day"), sizen)
  ) |>
  mutate(programs = substr(programs.temp,1,nchar(programs.temp)-2),
         returns  = substr(programs.temp,nchar(programs.temp),nchar(programs.temp))) |>
  select(-c(programs.temp))

##set up roster/recidivism dataframe for updated roster
#create 100 person dataframe
sizen3 = 100
date2  = 2022

set.seed(20012)
roster.update <- data.frame(
  client_names   = ch_name(sizen3),
  age            = round(rnorm(sizen3,29,5)),
  programs.temp= sample(prgnm, size=sizen3, replace = TRUE),
  datestart    = sample(seq(as.Date(paste0(date2,'/01/01')), as.Date(paste0(date2,'/12/31')), by="day"), sizen3)
  ) |>
  mutate(programs_clean = substr(programs.temp,1,nchar(programs.temp)-2),
         returns        = substr(programs.temp,nchar(programs.temp),nchar(programs.temp))) |>
  select(-c(programs.temp))
#create dataset of numerators and denominators
roster2.update <- roster.update |>
  select(-c(client_names,age)) |>
  group_by(programs_clean) |>
  count(returns) |>
  mutate(clients_served = sum(n),
         recid_rate     = case_when(returns == 1 ~ round(n/clients_served,2),
                                returns == 0 ~ 0),
         year           = factor(2022)
         ) |>
  slice(n()) |>
  select(-c(returns, n))

##set up program staff dataframe
#create 80 person dataframe
set.seed(160)
staff <- data.frame(
  staff = ch_name(sizen2),
  prg     = sample(prgnm2, size=sizen2, replace = TRUE)
  )

```

##Data Exploration

Let's take a look at our roster! Our DOC captures 10 Evidence Based Recidivism Reduction (EBRR) programs in 2021 listed by the Federal Bureau of Prisons and the individuals involved.The name of our data is `roster`.

```{r exploreroster}
#what's in our data
names(roster)

#count total number of programs
n_distinct(roster$programs)

#make sure people only show up in a program once
n_distinct(roster$client_names)

#list out the actual program names
roster |>
  count(programs)
```

It looks like there are some errors in your data! Clean them up so you can accurately report all EBRR programs and their associated recidivism rates

```{r cleanroster}
#clean program names
roster.clean <- roster |>
  mutate(programs_clean = case_when(programs == "bgs" ~ "bcs",
                                   programs == "fbt" ~ "dbt",
                                   programs == "brv" ~ "brave",
                                   programs == "rdp" ~ "rdap",
                                   TRUE ~ programs)) |>
  select(-c(programs))

#check cleaned program names
roster.clean |>
  count(programs_clean)

#recidivism by program count
roster.clean |>
  count(programs_clean,returns)

```

Let's calculate recidivism rates!

```{r rates}
#create dataset of numerators and denominators
roster2 <- roster.clean |>
  select(-c(client_names,age)) |>
  group_by(programs_clean) |>
  count(returns) |>
  mutate(clients_served = sum(n),
         recid_rate     = case_when(returns == 1 ~ round(n/clients_served,2),
                                returns == 0 ~ 0),
         year           = factor(2021)
         ) |>
  slice(n()) |>
  select(-c(returns, n))

```

Let's take a look at our program staffing! Our DOC captures 10 Evidence Based Recidivism Reduction (EBRR) programs listed by the Federal Bureau of Prisons and the individuals involved.The name of our data is `staff`.

```{r explorestaff}
#what's in our data
names(staff)

#count total number of programs
n_distinct(staff$prg)

#list out the actual program names
staff |>
  count(prg)

```

It looks like there are some errors in your data! Clean them up so you can accurately report all EBRR programs and their associated program staff.

```{r cleanstaff}
#clean program names
staff.clean <- staff |>
  mutate(programs_clean = case_when(prg == "resol" ~ "resolve",
                                   prg == "brv" ~ "brave",
                                   prg == "stg" ~ "stages",
                                   TRUE ~ prg)) |>
  select(-c(prg))

#check cleaned program names
staff.clean |>
  count(programs_clean)

```

Let's see how many program staff we have by program!

```{r numstaff}
#create dataset of staff counts
staff2 <- staff.clean |>
  select(-c(staff)) |>
  count(programs_clean) |>
  rename(num_staff = n)

```

Let's combine the program staff and recidivism rates dataframes so we can print out a table!

```{r merge}
tabout <- inner_join(roster2, staff2, by = ("programs_clean")) |>
  select(-c(clients_served)) 

tabout |> kable(format = "html")

```

But what if we want a nice data visualization of it all?

```{r dataviz1}
#build bar chart of recidivism rates across programs
rr <- ggplot(tabout,aes(x=programs_clean,y=recid_rate)) +
  geom_bar(stat="identity", fill = "darkblue") +
  geom_text(aes(label=paste(num_staff,"staff")), vjust=-0.3, color = "black") +
  ylim(0,1) +
  ylab("Recidivism Rate") +
  xlab("EBBR Programs") +
  ggtitle("Recidivism Rate across 2021 EBBR programs\nNumber of Program Staff listed in bars") +
  theme_classic()

rr

```

```{r badreport, echo=FALSE}

adv <- tabout |>
  filter(!(programs_clean %in% c("bcs", "brave", "sotrt", "mhsd", "resolve")))

adv_rate <- round(mean(adv$recid_rate)*100,1)

```

Oh no!! An advocacy group just publicly published that EBBR programs' recidivism rates are at an all time high of `r adv_rate`% with a report that claims to have used **your** DOC's reported data on EBBR program recidivism rates! Find out what's going on, and fast!

```{r goodreport}

tabout2 <- inner_join(roster2, staff2, by = ("programs_clean"))

#calculate average recidivism rate across programs
unw <- mean(tabout2$recid_rate)
print(unw)

```


Well this number is much better, but it's still way too high and we're going to lose our staffing! Keep investigating!

```{r weights}
#total clients served
total <- sum(tabout2$clients_served)

tabout2.wgt <- tabout2 |>
  mutate(recid_rate_w = clients_served*recid_rate)

w <- sum(tabout2.wgt$recid_rate_w)/total
print(w)

```


```{r dataviz2, warning=FALSE}
#for positioning
last <- tail(tabout$programs_clean,n=1)

#add recidivism weight averages to plot
rr + geom_hline(yintercept=w, linetype = "dashed", color = "red", size = 1) +
  geom_label(aes(label=paste("Weighted avg\n",w)),
             data=tabout %>% filter(programs_clean==last),
             nudge_y = w-tabout$recid_rate[10]-.1,
             nudge_x = -4
  ) + geom_hline(yintercept=unw, linetype = "dashed", color = "grey", size = 1) +
  geom_label(aes(label=paste("Unweighted avg\n",unw)),
             data=tabout %>% filter(programs_clean==last),
             nudge_y = unw-tabout$recid_rate[10]+.1,
             nudge_x = -8
  ) 


```


Uh oh! Looks like a new roster was just dropped with 2022 data. Quick! Redo the analysis to include 2022 data!

```{r rosterupdate}

tabout3 <- inner_join(roster2.update, staff2, by = ("programs_clean"))

tabout3 |> kable(format = "html")

#total clients served
total <- sum(tabout3$clients_served)

tabout3.wgt <- tabout3 |>
  mutate(recid_rate_w = clients_served*recid_rate)

w2 <- sum(tabout3.wgt$recid_rate_w)/total
print(w2)

tabout.final <- rbind(tabout,tabout3)

#build bar chart of recidivism rates across programs
rr <- ggplot(tabout.final,aes(x=programs_clean,y=recid_rate,
                              fill=year)) +
  geom_bar(position = "dodge", 
           stat = "identity") +
  #geom_text(aes(label=paste(num_staff,"staff")), vjust=-0.3, color = "black") +
  scale_fill_manual(values=c("darkblue","lightblue")) +
  ylim(0,1) +
  ylab("Recidivism Rate") +
  xlab("EBBR Programs") +
  ggtitle("Recidivism Rates across EBBR programs\n2021 - 2022") +
  theme_classic()

rr + 
  geom_hline(yintercept=w, linetype = "dashed", color = "red", size = 1) +
  geom_hline(yintercept=w2, linetype = "dashed", color = "grey", size = 1) +
    annotate(geom = "label",
             label = c(paste("2021 Weighted avg\n",round(w,2)), 
                       paste("2022 Weighted avg\n",round(w2,2))
                       ),
             x = c("bcs", "rdap"),
             y = c(w, w2),
             angle = 0
             )
  

```
